// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id             Int        @id @default(autoincrement())
  address        String     @unique
  implementation String
  name           String
  symbol         String
  totalSupply    Int
  contractUri    String
  owner          String
  tonEquivalent  Float
  times          DateTime[]
  absorptions    Float[]
  Minter         Minter[]
  Offseter       Offseter[]
  Yielder        Yielder[]
}

model Payment {
  id       Int      @id @default(autoincrement())
  address  String   @unique
  decimals Int
  Minter   Minter[]
}

model Minter {
  id                  Int     @id @default(autoincrement())
  address             String  @unique
  implementation      String
  maxSupply           Int
  reservedSupply      Int
  preSaleOpen         Boolean
  publicSaleOpen      Boolean
  maxBuyPerTx         Int
  unitPrice           Float
  whitelistMerkleRoot String
  soldOut             Boolean
  totalValue          Float
  Whitelist           Json?
  Project             Project @relation(fields: [projectId], references: [id])
  projectId           Int
  Payment             Payment @relation(fields: [paymentId], references: [id])
  paymentId           Int
}

model Offseter {
  id             Int     @id @default(autoincrement())
  address        String  @unique
  implementation String
  totalDeposited Float
  totalClaimed   Float
  totalClaimable Float
  minClaimable   Float
  Project        Project @relation(fields: [projectId], references: [id])
  projectId      Int
}

model Snapshot {
  id                         Int      @id @default(autoincrement())
  previousTime               DateTime
  previousProjectAbsorption  Float
  previousOffseterAbsorption Float
  previousYielderAbsorption  Float
  currentProjectAbsorption   Float
  currentOffseterAbsorption  Float
  currentYielderAbsorption   Float
  projectAbsorption          Float
  offseterAbsorption         Float
  yielderAbsorption          Float
  time                       DateTime
  Yielder                    Yielder  @relation(fields: [yielderId], references: [id])
  yielderId                  Int

  @@unique([yielderId, time], name: "snapshotIdentifier")
}

model Yielder {
  id              Int        @id @default(autoincrement())
  address         String     @unique
  implementation  String
  totalDeposited  Float
  totalAbsorption Float
  snapshotedTime  DateTime
  snapshot        Snapshot[]
  vesting         Vesting[]
  Project         Project    @relation(fields: [projectId], references: [id])
  projectId       Int
  Vester          Vester     @relation(fields: [vesterId], references: [id])
  vesterId        Int
}

model Vesting {
  id        Int      @id @default(autoincrement())
  amount    Float
  time      DateTime @unique
  Yielder   Yielder  @relation(fields: [yielderId], references: [id])
  yielderId Int

  @@unique([yielderId, time], name: "vestingIdentifier")
}

model Vester {
  id                 Int       @id @default(autoincrement())
  address            String    @unique
  implementation     String
  totalAmount        Float
  withdrawableAmount Float
  Yielder            Yielder[]
}

model Block {
  id     Int    @id @default(autoincrement())
  name   String @unique
  number Float
}
